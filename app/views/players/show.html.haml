-cache(cache_key_for_results("player-show-#{@player.id}")) do
  -results=@player.results
  %table.table.table-condensed.table-striped.table-bordered
    %tbody
      %tr
        %th Giocatore
        %td=@player.name
      %tr
        %th Punti
        %td="#{score(results)}"
      -if results[0]!=0
        %tr
          %th Score
          %td
            ="#{number_with_precision(classic_score(results)*100/(results[0]*3), precision: 2)}%"
      %tr
        %th Giocate
        %td=results[0]
      %tr
        %th Vinte
        %td=results[1]
      %tr
        %th Perse
        %td=results[2]
      %tr
        %th Pareggiate
        %td=results[3]
  %h3 Partite
  %table.table.table-condensed.table-bordered.table-hover
    %thead
      %tr
        %th.text-center Data
        %th.text-center Team
        %th.text-center Bianchi
        %th.text-center Neri
        %th.text-center Giocatori
    %tbody
      -@player.presences.joins(:match).order("matches.played_on DESC").each do |p|
        %tr.clickable-row{data: {href: match_path(p.match)},class: presence_color(p)}
          %td.text-center=I18n.l(p.match.played_on, format: "%d/%m/%Y")
          %td.text-center=p.team == "black" ? "Neri" : "Bianchi"
          %td.text-center=p.match.white_goals
          %td.text-center=p.match.black_goals
          %td.text-center=p.match.presences.count
  %h3 AffinitÃ 
  %table.table.table-condensed.table-striped.table-bordered.table-hover#myTable2
    %thead
      %tr
        %th.text-center Giocatore
        %th.text-center G
        %th.text-center V
        %th.text-center P
        %th.text-center N
    %tbody
      -Player.order(:name).each do |player|
        -if @player != player
          %tr.clickable-row{data: {href: player_path(player)}}
            %td.text-center=player.name
            %th.text-center= Presence.where("(player_id = ? or player_id = ?)", @player, player).having("COUNT(\"presences\".\"id\") = 2").group(:match_id,:team).count(:id).count
            %th.text-center=Presence.joins(:match).where("(player_id = ? or player_id = ?) and ((team = 'white' AND matches.white_goals > matches.black_goals  ) OR (team = 'black' AND matches.black_goals > matches.white_goals))", @player, player).having("COUNT(\"presences\".\"id\") = 2").group(:match_id,:team).count(:id).count
            %th.text-center=Presence.joins(:match).where("(player_id = ? or player_id = ?) and ((team = 'black' AND matches.white_goals > matches.black_goals  ) OR (team = 'white' AND matches.black_goals > matches.white_goals))", @player, player).having("COUNT(\"presences\".\"id\") = 2").group(:match_id,:team).count(:id).count
            %th.text-center=Presence.joins(:match).where("(player_id = ? or player_id = ?) and ( matches.white_goals = matches.black_goals )", @player, player).having("COUNT(\"presences\".\"id\") = 2").group(:match_id,:team).count(:id).count
